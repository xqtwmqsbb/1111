{"remainingRequest":"C:\\code\\t\\157\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\code\\t\\157\\front\\src\\views\\modules\\buhuotixing\\list.vue?vue&type=template&id=15ae9141&scoped=true","dependencies":[{"path":"C:\\code\\t\\157\\front\\src\\views\\modules\\buhuotixing\\list.vue","mtime":1730041301063},{"path":"C:\\code\\t\\157\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\code\\t\\157\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\code\\t\\157\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\code\\t\\157\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\code\\t\\157\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\code\\t\\157\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}